import { Component } from '@angular/core';
import {ProjectsService} from "../../../projectTable/service/projects.service";
import {UnterKategorieService} from "../../../../Services/unter-kategorie.service";
import {AbstractControl, FormBuilder, Validators} from "@angular/forms";
import {MatDialog} from "@angular/material/dialog";
import {MatSnackBar} from "@angular/material/snack-bar";
import {Article} from "../../Interface/article";
import {ProjectArticle} from "../../Interface/projectArticle";
import {AssetTableService} from "../../../../Services/asset-table.service";

@Component({
  selector: 'app-input-form-asset',
  templateUrl: './input-form-asset.component.html',
  styleUrls: ['./input-form-asset.component.css']
})


export class InputFormAssetComponent {

  assetForm = this.fb.group({
    asset_details: this.fb.group({
      firma: [''],
      artikelname: [''],
      model: [''],
      // toDo: Zustand als slect form list
      zustand: [''],
      beschreibung: [''],
    }),
    asset_numbers: this.fb.group({
      menge: [1, Validators.compose([
        Validators.required,
        Validators.pattern('^[0-9]*$'),
        this.positiveNonZero
      ])],
      preis: [''],
      Inventarnummer: [0],
      anlagenummer: ['']
    }),
    date_info: this.fb.group({
      einkaufs_datum: [new Date()],
      edit_date: [new Date()],
      belegt_von: [new Date()],
      belegt_bis: [new Date()],
    }),
  });


  positiveNonZero(control: AbstractControl) {
    if (control.value <= 0) {
      return { nonPositiveOrZero: true };
    }
    return null;
  }

  ngOnInit(): void {
    this.assetForm.valueChanges.subscribe(console.log);
  }




  constructor(
    private fb: FormBuilder,
    public projectsService: ProjectsService,
    public unterKategorieService: UnterKategorieService,
    private dialog: MatDialog,
    private _snackBar: MatSnackBar,
    private assetTableService: AssetTableService
  ) { }


  onSubmit() {
    let newProjectARticleFromForm = this.from_Form_to_ProjectArtickle();
    this.assetTableService.create_new_asset(newProjectARticleFromForm);
    this.dialog.closeAll();


    // TODO: Save newArticle and newProjectArticle to backend
  }

  private from_Form_to_ProjectArtickle() : ProjectArticle {
    let ProjektID = this.projectsService.selectedProject.getValue();
    // let unterkategorieID = this.subKategorieService.selectedUnterKategorieId.getValue();
    let unterkategorieID = this.unterKategorieService.selectedUnterKategorieId.getValue();

    if (unterkategorieID == null) {
      throw new Error("unterkategorieID is null");
    }


    let artikelnameControl = this.assetForm.get('asset_details.artikelname');
    let firmaControl = this.assetForm.get('asset_details.firma');
    let modelControl = this.assetForm.get('asset_details.model');
    let preisControl = this.assetForm.get('asset_numbers.preis');
    let beschreibungControl = this.assetForm.get('asset_details.beschreibung');
    let zustandControl = this.assetForm.get('asset_details.zustand');
    let anlagenummerControl = this.assetForm.get('asset_numbers.anlagenummer');

    let einkaufsDatumControl = this.assetForm.get('date_info.einkaufs_datum');
    let belegtVonControl = this.assetForm.get('date_info.belegt_von');
    let belegtBisControl = this.assetForm.get('date_info.belegt_bis');
    let editDateControl = this.assetForm.get('date_info.edit_date');
    let inventarnummerControl = this.assetForm.get('asset_numbers.Inventarnummer');
    let mengeControl = this.assetForm.get('asset_numbers.menge');


    // Create Article object
    let newArticle: Article = {
      artikel_id: 0, // This value should be generated by backend, not front-end
      artikelname: artikelnameControl && artikelnameControl.value ? artikelnameControl.value : '',
      firma: firmaControl && firmaControl.value ? firmaControl.value : '',
      model: modelControl && modelControl.value ? modelControl.value : '',
      unterkategorie_id: unterkategorieID,
      preis: preisControl && preisControl.value ? parseFloat(preisControl.value) : 0,
      beschreibung: beschreibungControl && beschreibungControl.value ? beschreibungControl.value : '',
      bild_url: '', // This should be provided by your form or some other method
      zustand: zustandControl && zustandControl.value ? zustandControl.value : '',
      einkaufs_datum: einkaufsDatumControl && einkaufsDatumControl.value ? einkaufsDatumControl.value.toISOString() : '',
      belegt_von: belegtVonControl && belegtVonControl.value ? belegtVonControl.value.toISOString() : '',
      belegt_bis: belegtBisControl && belegtBisControl.value ? belegtBisControl.value.toISOString() : '',
      edit_date: editDateControl && editDateControl.value ? editDateControl.value.toISOString() : '',
      anlagenummer: anlagenummerControl && anlagenummerControl.value ? anlagenummerControl.value : '',
      besitzer_id: null,
      assets: {
        ID: 0, // This value should be generated by backend, not front-end
        Inventarnummer: inventarnummerControl && inventarnummerControl.value ? Number(inventarnummerControl.value) : 0,
      },
      // unterkategorie: {} // You need to provide the correct subcategory data here
    };

    // Create ProjectArticle object
    let newProjectArticle: ProjectArticle = {
      projekt_artikel_id: 0, // This value should be generated by backend, not front-end
      projekt_id: parseInt(ProjektID, 10),
      artikel_id: 0, // This should be the ID of the newArticle object once it's saved to the backend
      menge: mengeControl && mengeControl.value ? Number(mengeControl.value) : 1,
      artikel: newArticle
    };

    return newProjectArticle;
  }
}

// form of the api request old
// {
//     "projekt_id": 802007,
//     "menge": 6,
//     "artikelname": "other Kabel last over REST API",
//     "unterkategorie_id": 1,
//     "preis": null,
//     "beschreibung": null,
//     "bild_url": null,
//     "zustand": null,
//     "einkaufs_datum": "2023-05-20T10:35:16.000Z",
//     "belegt_von": null,
//     "belegt_bis": null,
//     "anlagenummer": null,
//     "edit_date": "2023-05-20T10:35:16.000Z",
//     "besitzer_id": null,
//     "firma": null,
//     "model": null,
//     "Inventarnummer": 123456,
//     "unterkategorie_id": 1
// }

//new

// {
//     "projekt_artikel_id": 1,
//     "projekt_id": 802007,
//     "artikel_id": 2,
//     "menge": 10,
//     "artikel": {
//     "artikel_id": 2,
//         "artikelname": "HDMI Kabel",
//         "unterkategorie_id": 1,
//         "preis": null,
//         "beschreibung": null,
//         "bild_url": null,
//         "zustand": null,
//         "einkaufs_datum": "2023-05-19T10:17:29.000Z",
//         "belegt_von": null,
//         "belegt_bis": null,
//         "anlagenummer": null,
//         "edit_date": "2023-05-19T10:17:29.000Z",
//         "besitzer_id": null,
//         "firma": null,
//         "model": null,
//         "assets": null,
//         "unterkategorie": {
//         "unterkategorie_id": 1,
//             "unterkategoriename": "Kabel",
//             "kategorie_id": 1,
//             "kategorien": {
//             "kategorie_id": 1,
//                 "kategoriename": "Asset"
//             }
//         }
//     }
// }

